server {
    listen 80;
    server_name localhost;  # Replace with your domain name for production

    # Frontend - Serve Vite React static files
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }


    # ðŸ”¥ Add this block to handle JWT auth requests
    location /api/ {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Backend API - Proxy requests to Django
    location /chat/ {
    
    proxy_pass http://backend:8000/chat/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
    # Allow CORS Preflight Requests
    if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";
        return 204;
    }
}

    # WebSocket support for Django Channels
    location /ws/ {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;  # Ensures real-time data flow
    }
}

# # nginx.conf (Windows)
# # Save this file in your project's nginx/ folder (e.g., E:\ARooSH\SPIT\...\nginx\nginx.conf)

# # Define an upstream server block for your ASGI backend
# # This tells Nginx where to forward requests (Uvicorn/Daphne running locally)
# upstream django_asgi {
#     server 127.0.0.1:8000;  # Points to your ASGI server (Uvicorn/Daphne)
# }

# server {
#     # Listen on port 80 for HTTP and WebSocket traffic
#     listen 80;
#     # Replace with your domain or local IP for external access
#     server_name localhost;  

#     # Serve static files (CSS, JS, images) directly via Nginx
#     # ========================================================
#     location /static/ {
#         # Absolute path to your Django project's static files (collected via collectstatic)
#         alias E:/ARooSH/SPIT/SPIT_TE/DC/ChatApp/dc1/static/;
#         # Cache static files for better performance
#         expires 30d;
#         access_log off;
#     }

#     # Serve media files (user uploads)
#     # ================================
#     location /media/ {
#         # Absolute path to your media directory
#         alias E:/ARooSH/SPIT/SPIT_TE/DC/ChatApp/dc1/media/;
#         # Disable caching for media (users might update files frequently)
#         expires -1;
#     }

#     # Proxy WebSocket connections (/ws/ path)
#     # ======================================
#     location /ws/ {
#         proxy_pass http://django_asgi;  # Forward to ASGI upstream
        
#         # Required for WebSocket protocol upgrade
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
        
#         # Forward client IP and protocol details to Django
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

#     # Proxy all other HTTP traffic to Django
#     # =====================================
#     location / {
#         proxy_pass http://django_asgi;  # Forward to ASGI upstream
        
#         # Standard proxy headers for HTTP
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
        
#         # Timeout settings (adjust as needed)
#         proxy_read_timeout 300;
#         proxy_connect_timeout 300;
#     }

#     # Optional: Redirect HTTP to HTTPS (uncomment if using SSL)
#     # =========================================================
#     # location / {
#     #     return 301 https://$host$request_uri;
#     # }
# }

# # Optional: SSL Configuration (uncomment and adjust paths if using HTTPS)
# # ======================================================================
# # server {
# #     listen 443 ssl;
# #     server_name localhost;
# #     ssl_certificate     E:/path/to/ssl/certificate.crt;
# #     ssl_certificate_key E:/path/to/ssl/private.key;
# #     # ... repeat proxy settings from above ...
# # }